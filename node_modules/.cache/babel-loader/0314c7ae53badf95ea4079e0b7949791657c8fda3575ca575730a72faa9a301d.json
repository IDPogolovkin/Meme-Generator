{"ast":null,"code":"var _jsxFileName = \"/Users/daniilpogolovkin/Desktop/FreeCodeCampREACT/meme-generator/meme/src/components/Form.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../App.css';\nimport memeData from '../memeData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = props => {\n  _s();\n  const [memeImg, setMemeImg] = React.useState('');\n  function getMeme() {\n    const memeArr = memeData.data.memes;\n    const randomMeme = Math.floor(Math.random() * memeArr.length);\n    // i don't care what prev url was\n    setMemeImg(memeArr[randomMeme].url);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      action: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inText\",\n        type: \"text\",\n        placeholder: \"Top text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inText\",\n        type: \"text\",\n        placeholder: \"Bottom text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMeme,\n        className: \"subBtn\",\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"\",\n      src: memeImg,\n      alt: \"img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"kigzOB9gHlbLneB1VaKbCAHi/bA=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","memeData","Form","props","memeImg","setMemeImg","useState","getMeme","memeArr","data","memes","randomMeme","Math","floor","random","length","url"],"sources":["/Users/daniilpogolovkin/Desktop/FreeCodeCampREACT/meme-generator/meme/src/components/Form.jsx"],"sourcesContent":["import React from 'react'\nimport '../App.css'\nimport memeData from '../memeData'\n\nconst Form = (props) => {\n\n    const [memeImg, setMemeImg] = React.useState('')\n\n    function getMeme(){\n        const memeArr = memeData.data.memes\n        const randomMeme = Math.floor(Math.random() * memeArr.length)\n        // i don't care what prev url was\n        setMemeImg(memeArr[randomMeme].url)\n    }\n\n  return (\n    <main>\n        <div className='form' action=\"POST\">\n                <input className='inText' type=\"text\" placeholder='Top text' />\n                <input className='inText' type=\"text\" placeholder='Bottom text' />\n                <button onClick={getMeme} className='subBtn' >Get a new meme image ðŸ–¼</button>\n        </div>\n        <img className='' src={memeImg} alt=\"img\" />\n\n    </main>\n  )\n}\n\nexport default Form"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,aAAa;AAAA;AAElC,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAA;EAEpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAAC,EAAE,CAAC;EAEhD,SAASC,OAAO,GAAE;IACd,MAAMC,OAAO,GAAGP,QAAQ,CAACQ,IAAI,CAACC,KAAK;IACnC,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGN,OAAO,CAACO,MAAM,CAAC;IAC7D;IACAV,UAAU,CAACG,OAAO,CAACG,UAAU,CAAC,CAACK,GAAG,CAAC;EACvC;EAEF,oBACE;IAAA,wBACI;MAAK,SAAS,EAAC,MAAM;MAAC,MAAM,EAAC,MAAM;MAAA,wBAC3B;QAAO,SAAS,EAAC,QAAQ;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eAC/D;QAAO,SAAS,EAAC,QAAQ;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG,eAClE;QAAQ,OAAO,EAAET,OAAQ;QAAC,SAAS,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkC;IAAA;MAAA;MAAA;MAAA;IAAA,QAChF,eACN;MAAK,SAAS,EAAC,EAAE;MAAC,GAAG,EAAEH,OAAQ;MAAC,GAAG,EAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAEzC;AAEX,CAAC;AAAA,GAtBKF,IAAI;AAAA,KAAJA,IAAI;AAwBV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}