{"ast":null,"code":"var _jsxFileName = \"/Users/daniilpogolovkin/Desktop/FreeCodeCampREACT/meme-generator/meme/src/components/Form.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../App.css';\nimport memeData from '../memeData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = props => {\n  _s();\n  const [meme, setMeme] = React.useState({\n    topText: '',\n    bottonTxt: '',\n    randomImg: 'http://i.imgflip.com/1bij.jpg'\n  });\n  const [allMemeImages, setAllMemeImage] = React.useState(memeData);\n  function setText() {\n    setAllMemeImage(prevImg => ({}));\n  }\n  function getMeme() {\n    const memeArr = allMemeImages.data.memes;\n    const randomMeme = Math.floor(Math.random() * memeArr.length);\n    const url = memeArr[randomMeme].url;\n    setMeme(preMeme => ({\n      ...preMeme,\n      randomImg: url\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      action: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inText\",\n        type: \"text\",\n        placeholder: \"Top text\",\n        name: \"topText\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inText\",\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        name: \"bottonTxt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMeme,\n        className: \"subBtn\",\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImg,\n        className: \"meme--image\",\n        alt: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: \"One does not simply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: \"Walk into Mordor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"i8QqLZCWenGU5zPbgJqgT5inLoA=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","memeData","Form","props","meme","setMeme","useState","topText","bottonTxt","randomImg","allMemeImages","setAllMemeImage","setText","prevImg","getMeme","memeArr","data","memes","randomMeme","Math","floor","random","length","url","preMeme"],"sources":["/Users/daniilpogolovkin/Desktop/FreeCodeCampREACT/meme-generator/meme/src/components/Form.jsx"],"sourcesContent":["import React from 'react'\nimport '../App.css'\nimport memeData from '../memeData'\n\nconst Form = (props) => {\n\n    const [meme, setMeme] = React.useState({\n        topText: '',\n        bottonTxt: '',\n        randomImg: 'http://i.imgflip.com/1bij.jpg'\n    })\n\n    const [allMemeImages, setAllMemeImage] = React.useState(memeData)\n\n    function setText(){\n        setAllMemeImage(prevImg =>({\n            \n        }))\n    }\n\n    function getMeme(){\n        const memeArr = allMemeImages.data.memes\n        const randomMeme = Math.floor(Math.random() * memeArr.length)\n        const url = memeArr[randomMeme].url\n        setMeme(preMeme => ({\n            ...preMeme,\n            randomImg: url\n        }))\n    }\n\n  return (\n    <main>\n        <div className='form' action=\"POST\">\n                <input className='inText' type=\"text\" placeholder='Top text' name='topText' />\n                <input className='inText' type=\"text\" placeholder='Bottom text' name='bottonTxt' />\n                <button onClick={getMeme} className='subBtn' >Get a new meme image ðŸ–¼</button>\n        </div>\n        <div className=\"meme\">\n                <img src={meme.randomImg} className=\"meme--image\" alt='img'/>\n                <h2 className=\"meme--text top\">One does not simply</h2>\n                <h2 className=\"meme--text bottom\">Walk into Mordor</h2>\n        </div>\n\n    </main>\n  )\n}\n\nexport default Form"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,aAAa;AAAA;AAElC,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAA;EAEpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAAC;IACnCC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE;EACf,CAAC,CAAC;EAEF,MAAM,CAACC,aAAa,EAAEC,eAAe,CAAC,GAAGX,KAAK,CAACM,QAAQ,CAACL,QAAQ,CAAC;EAEjE,SAASW,OAAO,GAAE;IACdD,eAAe,CAACE,OAAO,KAAI,CAE3B,CAAC,CAAC,CAAC;EACP;EAEA,SAASC,OAAO,GAAE;IACd,MAAMC,OAAO,GAAGL,aAAa,CAACM,IAAI,CAACC,KAAK;IACxC,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGN,OAAO,CAACO,MAAM,CAAC;IAC7D,MAAMC,GAAG,GAAGR,OAAO,CAACG,UAAU,CAAC,CAACK,GAAG;IACnClB,OAAO,CAACmB,OAAO,KAAK;MAChB,GAAGA,OAAO;MACVf,SAAS,EAAEc;IACf,CAAC,CAAC,CAAC;EACP;EAEF,oBACE;IAAA,wBACI;MAAK,SAAS,EAAC,MAAM;MAAC,MAAM,EAAC,MAAM;MAAA,wBAC3B;QAAO,SAAS,EAAC,QAAQ;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,UAAU;QAAC,IAAI,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eAC9E;QAAO,SAAS,EAAC,QAAQ;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,aAAa;QAAC,IAAI,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,eACnF;QAAQ,OAAO,EAAET,OAAQ;QAAC,SAAS,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkC;IAAA;MAAA;MAAA;MAAA;IAAA,QAChF,eACN;MAAK,SAAS,EAAC,MAAM;MAAA,wBACb;QAAK,GAAG,EAAEV,IAAI,CAACK,SAAU;QAAC,SAAS,EAAC,aAAa;QAAC,GAAG,EAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAE,eAC7D;QAAI,SAAS,EAAC,gBAAgB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAyB,eACvD;QAAI,SAAS,EAAC,mBAAmB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsB;IAAA;MAAA;MAAA;MAAA;IAAA,QACzD;EAAA;IAAA;IAAA;IAAA;EAAA,QAEH;AAEX,CAAC;AAAA,GAzCKP,IAAI;AAAA,KAAJA,IAAI;AA2CV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}