{"ast":null,"code":"var _jsxFileName = \"/Users/daniilpogolovkin/Desktop/FreeCodeCampREACT/meme-generator/meme/src/components/Form.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../App.css';\nimport memeData from '../memeData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = props => {\n  _s();\n  const [memeImg, setMemeImg] = React.useState('');\n  function setUrl() {\n    setMemeImg(preLink = url);\n  }\n  function getMeme() {\n    const memeArr = memeData.data.memes;\n    const randomMeme = Math.floor(Math.random() * memeArr.length);\n    const url = memeArr[randomMeme].url;\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      action: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inText\",\n        type: \"text\",\n        placeholder: \"Top text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inText\",\n        type: \"text\",\n        placeholder: \"Bottom text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMeme,\n        className: \"subBtn\",\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"kigzOB9gHlbLneB1VaKbCAHi/bA=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","memeData","Form","props","memeImg","setMemeImg","useState","setUrl","preLink","url","getMeme","memeArr","data","memes","randomMeme","Math","floor","random","length"],"sources":["/Users/daniilpogolovkin/Desktop/FreeCodeCampREACT/meme-generator/meme/src/components/Form.jsx"],"sourcesContent":["import React from 'react'\nimport '../App.css'\nimport memeData from '../memeData'\n\nconst Form = (props) => {\n    const [memeImg, setMemeImg] = React.useState('')\n    function setUrl(){\n        setMemeImg(preLink = url)\n    }\n\n    function getMeme(){\n        const memeArr = memeData.data.memes\n        const randomMeme = Math.floor(Math.random() * memeArr.length)\n        const url = memeArr[randomMeme].url\n    }\n  return (\n    <main>\n        <div className='form' action=\"POST\">\n                <input className='inText' type=\"text\" placeholder='Top text' />\n                <input className='inText' type=\"text\" placeholder='Bottom text' />\n                <button onClick={getMeme} className='subBtn' >Get a new meme image ðŸ–¼</button>\n        </div>\n    </main>\n  )\n}\n\nexport default Form"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,aAAa;AAAA;AAElC,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAAC,EAAE,CAAC;EAChD,SAASC,MAAM,GAAE;IACbF,UAAU,CAACG,OAAO,GAAGC,GAAG,CAAC;EAC7B;EAEA,SAASC,OAAO,GAAE;IACd,MAAMC,OAAO,GAAGV,QAAQ,CAACW,IAAI,CAACC,KAAK;IACnC,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGN,OAAO,CAACO,MAAM,CAAC;IAC7D,MAAMT,GAAG,GAAGE,OAAO,CAACG,UAAU,CAAC,CAACL,GAAG;EACvC;EACF,oBACE;IAAA,uBACI;MAAK,SAAS,EAAC,MAAM;MAAC,MAAM,EAAC,MAAM;MAAA,wBAC3B;QAAO,SAAS,EAAC,QAAQ;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eAC/D;QAAO,SAAS,EAAC,QAAQ;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG,eAClE;QAAQ,OAAO,EAAEC,OAAQ;QAAC,SAAS,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkC;IAAA;MAAA;MAAA;MAAA;IAAA;EAChF;IAAA;IAAA;IAAA;EAAA,QACH;AAEX,CAAC;AAAA,GApBKR,IAAI;AAAA,KAAJA,IAAI;AAsBV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}