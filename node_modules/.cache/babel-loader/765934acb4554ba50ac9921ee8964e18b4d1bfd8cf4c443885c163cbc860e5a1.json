{"ast":null,"code":"var _jsxFileName = \"/Users/daniilpogolovkin/Desktop/FreeCodeCampREACT/meme-generator/meme/src/components/Form.jsx\";\nimport React from 'react';\nimport '../App.css';\nimport memeData from '../memeData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = props => {\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      action: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inText\",\n        type: \"text\",\n        placeholder: \"Top text\",\n        name: \"topText\",\n        value: meme.topText,\n        onChange: setText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inText\",\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        name: \"bottonTxt\",\n        value: meme.bottonTxt,\n        onChange: setText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMeme,\n        className: \"subBtn\",\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImg,\n        className: \"meme--image\",\n        alt: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: meme.bottonTxt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","memeData","Form","props","meme","topText","setText","bottonTxt","getMeme","randomImg"],"sources":["/Users/daniilpogolovkin/Desktop/FreeCodeCampREACT/meme-generator/meme/src/components/Form.jsx"],"sourcesContent":["import React from 'react'\nimport '../App.css'\nimport memeData from '../memeData'\n\nconst Form = (props) => {\n\n\n\n  return (\n    <main>\n        <div className='form' action=\"POST\">\n                <input className='inText' type=\"text\" placeholder='Top text' name='topText' value={meme.topText} onChange={setText}/>\n                <input className='inText' type=\"text\" placeholder='Bottom text' name='bottonTxt' value={meme.bottonTxt} onChange={setText} />\n                <button onClick={getMeme} className='subBtn' >Get a new meme image ðŸ–¼</button>\n        </div>\n        <div className=\"meme\">\n                <img src={meme.randomImg} className=\"meme--image\" alt='img'/>\n                <h2 className=\"meme--text top\">{meme.topText}</h2>\n                <h2 className=\"meme--text bottom\">{meme.bottonTxt}</h2>\n        </div>\n\n    </main>\n  )\n}\n\nexport default Form"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,aAAa;AAAA;AAElC,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAItB,oBACE;IAAA,wBACI;MAAK,SAAS,EAAC,MAAM;MAAC,MAAM,EAAC,MAAM;MAAA,wBAC3B;QAAO,SAAS,EAAC,QAAQ;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,UAAU;QAAC,IAAI,EAAC,SAAS;QAAC,KAAK,EAAEC,IAAI,CAACC,OAAQ;QAAC,QAAQ,EAAEC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAE,eACrH;QAAO,SAAS,EAAC,QAAQ;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,aAAa;QAAC,IAAI,EAAC,WAAW;QAAC,KAAK,EAAEF,IAAI,CAACG,SAAU;QAAC,QAAQ,EAAED;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG,eAC7H;QAAQ,OAAO,EAAEE,OAAQ;QAAC,SAAS,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkC;IAAA;MAAA;MAAA;MAAA;IAAA,QAChF,eACN;MAAK,SAAS,EAAC,MAAM;MAAA,wBACb;QAAK,GAAG,EAAEJ,IAAI,CAACK,SAAU;QAAC,SAAS,EAAC,aAAa;QAAC,GAAG,EAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAE,eAC7D;QAAI,SAAS,EAAC,gBAAgB;QAAA,UAAEL,IAAI,CAACC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAM,eAClD;QAAI,SAAS,EAAC,mBAAmB;QAAA,UAAED,IAAI,CAACG;MAAS;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACzD;EAAA;IAAA;IAAA;IAAA;EAAA,QAEH;AAEX,CAAC;AAAA,KAnBKL,IAAI;AAqBV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}